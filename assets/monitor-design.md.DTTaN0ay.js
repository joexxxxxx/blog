import{_ as s,c as a,o as l,ag as n}from"./chunks/framework.cqXd1Ucj.js";const E=JSON.parse('{"title":"前端监控系统设计文档","description":"","frontmatter":{},"headers":[],"relativePath":"monitor-design.md","filePath":"monitor-design.md"}'),h={name:"monitor-design.md"};function t(e,i,p,k,r,d){return l(),a("div",null,i[0]||(i[0]=[n(`<h1 id="前端监控系统设计文档" tabindex="-1">前端监控系统设计文档 <a class="header-anchor" href="#前端监控系统设计文档" aria-label="Permalink to &quot;前端监控系统设计文档&quot;">​</a></h1><h2 id="_1-设计理念" tabindex="-1">1. 设计理念 <a class="header-anchor" href="#_1-设计理念" aria-label="Permalink to &quot;1. 设计理念&quot;">​</a></h2><h3 id="_1-1-微内核架构" tabindex="-1">1.1 微内核架构 <a class="header-anchor" href="#_1-1-微内核架构" aria-label="Permalink to &quot;1.1 微内核架构&quot;">​</a></h3><ul><li><strong>核心思想</strong>：将系统分为核心系统和插件系统</li><li><strong>优势</strong>： <ul><li>高度可扩展性：新功能通过插件形式添加，无需修改核心代码</li><li>松耦合：插件之间相互独立，可以独立开发、测试和部署</li><li>灵活性：可以根据需求动态加载或卸载插件</li><li>可维护性：核心系统简单稳定，功能实现在插件中，便于维护</li></ul></li></ul><h3 id="_1-2-单一职责原则" tabindex="-1">1.2 单一职责原则 <a class="header-anchor" href="#_1-2-单一职责原则" aria-label="Permalink to &quot;1.2 单一职责原则&quot;">​</a></h3><ul><li>核心系统只负责： <ul><li>错误事件的捕获</li><li>插件的注册与管理</li><li>事件的分发</li></ul></li><li>具体功能由插件实现： <ul><li>日志处理</li><li>数据上报</li><li>用户行为追踪</li></ul></li></ul><h2 id="_2-系统架构" tabindex="-1">2. 系统架构 <a class="header-anchor" href="#_2-系统架构" aria-label="Permalink to &quot;2. 系统架构&quot;">​</a></h2><h3 id="_2-1-核心系统-core" tabindex="-1">2.1 核心系统（Core） <a class="header-anchor" href="#_2-1-核心系统-core" aria-label="Permalink to &quot;2.1 核心系统（Core）&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ErrorEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  message</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  timestamp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...其他错误信息</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MonitorPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[];</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ErrorEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_2-2-错误捕获" tabindex="-1">2.2 错误捕获 <a class="header-anchor" href="#_2-2-错误捕获" aria-label="Permalink to &quot;2.2 错误捕获&quot;">​</a></h3><ul><li>JavaScript运行时错误 (window.onerror)</li><li>Promise未处理的异常 (unhandledrejection)</li><li>资源加载错误 (error event)</li><li>自定义错误上报</li></ul><h2 id="_3-插件系统设计" tabindex="-1">3. 插件系统设计 <a class="header-anchor" href="#_3-插件系统设计" aria-label="Permalink to &quot;3. 插件系统设计&quot;">​</a></h2><h3 id="_3-1-插件接口" tabindex="-1">3.1 插件接口 <a class="header-anchor" href="#_3-1-插件接口" aria-label="Permalink to &quot;3.1 插件接口&quot;">​</a></h3><ul><li><strong>统一接口</strong>：所有插件实现相同的接口</li><li><strong>异步处理</strong>：支持异步操作，不阻塞主线程</li><li><strong>类型过滤</strong>：插件可以选择性处理特定类型的错误</li></ul><h3 id="_3-2-内置插件" tabindex="-1">3.2 内置插件 <a class="header-anchor" href="#_3-2-内置插件" aria-label="Permalink to &quot;3.2 内置插件&quot;">​</a></h3><ol><li><p><strong>控制台插件</strong>（ConsolePlugin）</p><ul><li>格式化错误信息</li><li>分组显示相关信息</li><li>开发环境调试使用</li></ul></li><li><p><strong>HTTP上报插件</strong>（HttpPlugin）</p><ul><li>错误批量处理</li><li>错误去重</li><li>自动重试机制</li><li>保证数据发送可靠性</li></ul></li><li><p><strong>用户行为追踪插件</strong>（BreadcrumbPlugin）</p><ul><li>记录用户操作轨迹</li><li>提供错误发生时的上下文</li><li>支持自定义行为记录</li></ul></li></ol><h2 id="_4-使用指南" tabindex="-1">4. 使用指南 <a class="header-anchor" href="#_4-使用指南" aria-label="Permalink to &quot;4. 使用指南&quot;">​</a></h2><h3 id="_4-1-基础使用" tabindex="-1">4.1 基础使用 <a class="header-anchor" href="#_4-1-基础使用" aria-label="Permalink to &quot;4.1 基础使用&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { monitor } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./monitor&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 自动捕获错误</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">monitor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 手动上报错误</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">monitor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reportError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;custom&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;自定义错误&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  timestamp: Date.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_4-2-自定义插件开发" tabindex="-1">4.2 自定义插件开发 <a class="header-anchor" href="#_4-2-自定义插件开发" aria-label="Permalink to &quot;4.2 自定义插件开发&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CustomPlugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MonitorPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;custom-plugin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;javascript&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;resource&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;promise&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ErrorEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 实现自定义处理逻辑</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">monitor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CustomPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre></div><h2 id="_5-最佳实践" tabindex="-1">5. 最佳实践 <a class="header-anchor" href="#_5-最佳实践" aria-label="Permalink to &quot;5. 最佳实践&quot;">​</a></h2><h3 id="_5-1-错误处理" tabindex="-1">5.1 错误处理 <a class="header-anchor" href="#_5-1-错误处理" aria-label="Permalink to &quot;5.1 错误处理&quot;">​</a></h3><ul><li>使用try-catch包装可能出错的代码</li><li>Promise必须添加错误处理</li><li>资源加载添加错误回调</li><li>使用TypeScript进行类型检查</li></ul><h3 id="_5-2-插件开发" tabindex="-1">5.2 插件开发 <a class="header-anchor" href="#_5-2-插件开发" aria-label="Permalink to &quot;5.2 插件开发&quot;">​</a></h3><ul><li>保持插件功能单一</li><li>实现错误处理机制</li><li>支持配置项</li><li>做好性能优化</li></ul><h3 id="_5-3-性能考虑" tabindex="-1">5.3 性能考虑 <a class="header-anchor" href="#_5-3-性能考虑" aria-label="Permalink to &quot;5.3 性能考虑&quot;">​</a></h3><ul><li>错误信息批量上报</li><li>避免频繁的DOM操作</li><li>合理使用防抖和节流</li><li>控制内存使用</li></ul><h2 id="_6-扩展建议" tabindex="-1">6. 扩展建议 <a class="header-anchor" href="#_6-扩展建议" aria-label="Permalink to &quot;6. 扩展建议&quot;">​</a></h2><h3 id="_6-1-可能的插件扩展" tabindex="-1">6.1 可能的插件扩展 <a class="header-anchor" href="#_6-1-可能的插件扩展" aria-label="Permalink to &quot;6.1 可能的插件扩展&quot;">​</a></h3><ul><li>离线存储插件（IndexedDB/LocalStorage）</li><li>性能监控插件</li><li>网络请求监控插件</li><li>用户行为分析插件</li><li>错误聚合分析插件</li></ul><h3 id="_6-2-功能扩展" tabindex="-1">6.2 功能扩展 <a class="header-anchor" href="#_6-2-功能扩展" aria-label="Permalink to &quot;6.2 功能扩展&quot;">​</a></h3><ul><li>SourceMap解析</li><li>错误还原</li><li>自动告警</li><li>性能指标采集</li><li>用户行为分析</li></ul><h2 id="_7-注意事项" tabindex="-1">7. 注意事项 <a class="header-anchor" href="#_7-注意事项" aria-label="Permalink to &quot;7. 注意事项&quot;">​</a></h2><h3 id="_7-1-安全性" tabindex="-1">7.1 安全性 <a class="header-anchor" href="#_7-1-安全性" aria-label="Permalink to &quot;7.1 安全性&quot;">​</a></h3><ul><li>敏感信息过滤</li><li>错误信息脱敏</li><li>遵守同源策略</li><li>控制上报数据大小</li></ul><h3 id="_7-2-稳定性" tabindex="-1">7.2 稳定性 <a class="header-anchor" href="#_7-2-稳定性" aria-label="Permalink to &quot;7.2 稳定性&quot;">​</a></h3><ul><li>插件异常隔离</li><li>核心功能容错</li><li>关键流程重试</li><li>避免无限循环</li></ul>`,38)]))}const g=s(h,[["render",t]]);export{E as __pageData,g as default};
